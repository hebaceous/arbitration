<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="cn.anyang.zc.arbitration.service.impl"/>
	<context:component-scan base-package="cn.anyang.zc.arbitration.web.controller"/>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/> -->
		<!--
		<property name="url" value="jdbc:sqlserver://localhost:1433;databaseName=arbitration"/>
		
		-->
		<property name="url" value="jdbc:sqlserver://192.168.24.77:1433;databaseName=arbitration"/>
		
		<property name="username" value="sa"/>
		<property name="password" value=""/>
		<property name="maxWait" value="5000"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="cn.anyang.zc.arbitration.domain"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.anyang.zc.arbitration.mapper"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<array>
				<bean class="cn.anyang.zc.arbitration.web.intercepter.SecurityHandlerInterceptor"/>
			</array>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			</list>
		</property>
	</bean>

	<!-- 配置默认视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- 配置不拦截静态文件 -->
	<mvc:default-servlet-handler/>

	<!-- 配置上传文件解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

	<!-- 自定义全局异常处理，配合logback的SMTPAppender，通过error.jsp返回json串 -->
	<bean class="cn.anyang.zc.arbitration.web.exception.GlobalHandlerExceptionResolver"/>

</beans>